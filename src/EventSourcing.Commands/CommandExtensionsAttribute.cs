using System;
using System.Reactive;

namespace EventSourcing.Commands;

/// <summary>
/// Use this attribute on a static partial class. 
/// Useful extensions and command processor base classes for result and failure type are added by the source generator shipped with EventSourcing.Commands.
/// </summary>
/// <typeparam name="TResult">Result type corresponding to TFailure. Has to implement EventSourcing.Commands.IResult(of T, of TFailure, of TResult), which is automatically working with result types generated by FunicularSwitch.Generators package</typeparam>
/// <typeparam name="TFailure">Type use to represent errors in CommandProcessors. Has to implement EventSourcing.Commands.IFailure</typeparam>
[AttributeUsage(AttributeTargets.Class, Inherited = false)]
public class CommandExtensionsAttribute<TResult, TFailure> : Attribute
    where TFailure : IFailure<TFailure>
    where TResult : IResult<Unit, TFailure, TResult>;

/// <summary>
/// Use this attribute on a static partial class. 
/// Useful extensions and command processor base classes your failure type added by the source generator shipped with EventSourcing.Commands.
/// </summary>
/// <typeparam name="TFailure">Type use to represent errors in CommandProcessors</typeparam>
[AttributeUsage(AttributeTargets.Class, Inherited = false)]
public class CommandExtensionsAttribute<TFailure> : Attribute;